name: 'Build Test Lint'
run-name: Build Test Lint of ${{ github.ref_name }} by @${{ github.actor }}
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:
    inputs:
      debug_enabled:
        type: boolean
        description: 'Run the build with tmate debugging enabled (https://github.com/marketplace/actions/debugging-with-tmate)'
        required: false
        default: false

jobs:
  rubocop:
    runs-on: ubuntu-latest
    container: cimg/ruby:3.2.2
    steps:
    - uses: actions/checkout@v3
    - run: bundle install
    - name: rubocop
      run: bundle exec rubocop . --out /tmp/rubocop-results/check-results.xml --format progress --parallel

  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Github Container Login
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          target: hyrax-engine-dev
          push: true
          tags: |
            ghcr.io/samvera/hyrax/dassie-dev:${{ github.sha }}

  test:
    needs: build
    runs-on: ubuntu-latest
    container:
      image: "ghcr.io/samvera/hyrax/dassie-dev:${{ github.sha }}"
      options: "--user root"
    env:
      RAILS_ENV: test
      RACK_ENV: test
      FCREPO_PORT: 8080
      POSTGRES_DB: circle_test
      POSTGRES_HOST: 127.0.0.1
      POSTGRES_USER: postgres

    services:
      standalone-chromium:
        image: seleniarm/standalone-chromium:114.0
        env:
          SE_NODE_SESSION_TIMEOUT: 1200
          START_XVFB: "false"
      fcrepo:
        image: samvera/fcrepo4:4.7.5
        env:
          CATALINA_OPTS: "-Djava.awt.headless=true -Dfile.encoding=UTF-8 -server -Xms512m -Xmx1024m -XX:NewSize=256m -XX:MaxNewSize=256m -XX:PermSize=256m -XX:MaxPermSize=256m -XX:+DisableExplicitGC"
      zookeeper:
        image: zookeeper:3.4
      redis:
        image: redis:6.2-alpine
      postgres:
        image: postgres:14.9-alpine

    steps:
    - name: Run solr
      run: |
           apk add docker jq
           network=$(docker inspect --format '{{json .NetworkSettings.Networks}}' `hostname` | jq -r 'keys[0]')
           SECURITY_JSON='{"authentication":{"blockUnknown": false, "class":"solr.BasicAuthPlugin", "credentials":{"solr":"IV0EHq1OnNrj6gvRCwvFwTrZ1+z1oBbnQdiVC3otuq0= Ndd7LKvVBAaZIF0QAVi1ekCfAJXr1GGfLtRUXhgrF8c="}, "realm":"My Solr users", "forwardCredentials": false}, "authorization":{ "class":"solr.RuleBasedAuthorizationPlugin", "permissions":[{"name":"security-edit", "role":"admin"}], "user-role":{"solr":"admin"}}}'
           docker run \
             --detach \
             --name solr \
             --network "$network" \
             --env VERBOSE=yes \
             -p 8985:8985 \
             solr:8.11-slim \
             sh -c "server/scripts/cloud-scripts/zkcli.sh -zkhost zookeeper:2181 -cmd put /security.json \"${SECURITY_JSON}\" && solr-fg -cloud -noprompt  -p 8985 -z zookeeper:2181"
    - name: Create solr core
      run: |
            cd /app/samvera/hyrax-webapp/solr/conf
            zip -1 -r solr_conf.zip ./*
            docker network ls
            docker ps
            docker inspect solr
            docker logs solr
            curl "http://solr:SolrRocks@localhost:8985/solr/admin/ping" || "Failed to connect on localhost"
            curl "http://solr:SolrRocks@127.0.0.1:8985/solr/admin/ping" || "Failed to connect on 127.0.0.1"
            curl "http://solr:SolrRocks@solr:8985/solr/admin/ping" || "Failed to connect on solr"
            db-wait.sh localhost:8985 # wait for solr to be available before hitting the API
            curl -H "Content-type:application/octet-stream" --data-binary @solr_conf.zip "http://solr:SolrRocks@127.0.0.1:8985/solr/admin/configs?action=UPLOAD&name=solrconfig"
            curl -H 'Content-type: application/json' http://solr:SolrRocks@127.0.0.1:8985/api/collections/ -d '{create: {name: hydra-test, config: solrconfig, numShards: 1}}'
            curl -H 'Content-type: application/json' http://solr:SolrRocks@127.0.0.1:8985/api/collections/ -d '{create: {name: valkyrie-test, config: solrconfig, numShards: 1}}'
    - name: Rspec tests
      run: |
           cd /app/samvera/hyrax-engine && bundle exec rspec

